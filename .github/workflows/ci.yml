name: CI

on:
  pull_request:
  push:
    branches: ['master']
    tags: ['v*']
  schedule:
  - cron: '00 01 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build:
        - win-msvc
        - macos
        - linux-gnu
        include:
        - build: win-msvc
          os: windows-latest
          target: x86_64-pc-windows-msvc
        - build: macos
          os: macos-latest
          target: x86_64-apple-darwin
        - build: linux-gnu
          os: ubuntu-latest
          target: x86_64-unknown-linux-gnu        

    steps:
    - uses: actions/checkout@v1
    - name: Use Node
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Install wasm-pack
      run:  curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh 
    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm test
      env:
        CI: true
    - name: browser test
      working-directory: ./e2e
      run: |
        npm install
        npm test
      env:
        CI: true
    - name: strip linux builds
      if: matrix.build == 'linux-gnu'
      run: strip dist/node/*.node
    - name: Set artifact name
      shell: bash
      working-directory: dist/node
      run: |
        echo "ARTIFACT_NAME=$(echo highwayhasher*.node)" >> $GITHUB_ENV
    - uses: actions/upload-artifact@v2
      with:
        path: dist/node/highwayhasher*.node
        name: ${{ env.ARTIFACT_NAME }}
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/download-artifact@v2
      with:
        path: artifacts-temp
    - name: Flatten artifacts
      run: |
        mkdir artifacts
        find artifacts-temp -type f -exec cp '{}' artifacts/ \;
        ls -lR artifacts
    - name: Create Release
      if: github.event_name == 'release' && github.event.action == 'created'
      uses: actions/github-script@v2
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          console.log('environment', process.versions);
          const fs = require('fs').promises;
          const { repo: { owner, repo }, sha } = context;
          console.log({ owner, repo, sha });
          const release = await github.repos.createRelease({
            owner, repo,
            tag_name: process.env.GITHUB_REF,
            draft: true,
            target_commitish: sha
          });

          console.log('created release', { release });

          for (let file of await fs.readdir('artifacts')) {
            console.log('uploading', file);

            await github.repos.uploadReleaseAsset({
              owner, repo,
              release_id: release.data.id,
              name: file,
              data: await fs.readFile(`artifacts/${file}`)
            });
          }
